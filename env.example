# ============================================
# Configuración del Ambiente - Docker Tutorial
# ============================================
# Este archivo es una PLANTILLA
# 
# PASOS PARA USARLO:
# 1. Copiar este archivo: cp .env.example .env
# 2. Editar .env con tus valores
# 3. .env NO debe commitearse a Git (ya está en .gitignore)

# ============================================
# CONFIGURACIÓN DE LA BASE DE DATOS
# ============================================

# Host de MySQL
# En Docker, usamos el NOMBRE del contenedor (no 'localhost')
# Esto es gracias al DNS interno de Docker
DB_HOST=mysql

# Puerto de MySQL dentro del contenedor
# (No confundir con el puerto expuesto en tu PC)
DB_PORT=3306

# Nombre de la base de datos
# MySQL la creará automáticamente al iniciar
DB_NAME=tutorial_db

# Usuario de la base de datos
# MySQL lo creará automáticamente
DB_USER=tutorial_user

# Contraseña del usuario
# ⚠️ Cambiar en producción!
DB_PASSWORD=tutorial_password_123

# Contraseña del usuario root
# Solo para administración, no usar en la app
DB_ROOT_PASSWORD=root_password_456

# ============================================
# NOTAS EDUCATIVAS
# ============================================
#
# ¿POR QUÉ DB_HOST=mysql Y NO localhost?
# - En Docker, cada contenedor tiene su propio "localhost"
# - Los contenedores se comunican usando nombres de servicio
# - 'mysql' es el nombre definido en docker-compose.yml
# - Docker tiene DNS interno que resuelve 'mysql' a la IP del contenedor
#
# ¿CUÁNDO USAR LOCALHOST?
# - Cuando te conectas desde TU PC al contenedor: localhost:3306
# - Cuando un contenedor se conecta a OTRO: usar nombre del servicio
#
# EJEMPLO PRÁCTICO:
# ┌─────────────────────────────────────────────────────────┐
# │  TU PC                                                   │
# │  └─ mysql -h localhost -P 3306 -u user -p              │
# │     (Aquí localhost SÍ funciona)                        │
# └─────────────────────────────────────────────────────────┘
#
# ┌─────────────────────────────────────────────────────────┐
# │  CONTENEDOR PHP                                          │
# │  └─ mysqli_connect('mysql', 'user', 'pass', 'db')       │
# │     (Aquí usa 'mysql', el nombre del servicio)          │
# └─────────────────────────────────────────────────────────┘
#
# SEGURIDAD:
# - Este archivo (.env) NO debe commitearse a Git
# - .env.example SÍ se commitea (es la plantilla)
# - Las contraseñas aquí son solo para desarrollo
# - En producción usar contraseñas fuertes y únicas
#
# DOCKER COMPOSE Y .ENV:
# - docker-compose.yml lee automáticamente .env
# - Usa sintaxis ${VARIABLE} para referenciar valores
# - Ejemplo en docker-compose.yml:
#   environment:
#     DB_NAME: ${DB_NAME}
#
# VARIABLES DE ENTORNO EN PHP:
# - getenv('DB_HOST'): Lee variable de entorno
# - $_ENV['DB_HOST']: Array de variables (requiere php.ini configurado)
# - Con vlucas/phpdotenv: Carga .env de tu app automáticamente
#
# ============================================
